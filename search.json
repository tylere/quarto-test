[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto-test",
    "section": "",
    "text": "matplotlib demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyvis demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nNov 30, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/pyvis/index.html",
    "href": "posts/pyvis/index.html",
    "title": "pyvis demo",
    "section": "",
    "text": "Code\nfrom pyvis.network import Network\nimport networkx as nx\n\ng = Network(notebook=True, cdn_resources=\"remote\")\nnxg = nx.complete_graph(5)\ng.from_nx(nxg)\ng.show('nx.html')\n\n\n\n        \n        \npyvis test\n\n\n\n\nCode\ng = Network(notebook=True, cdn_resources=\"remote\")\ng.add_nodes([1,2,3], value=[10, 100, 400],\n                         title=['I am node 1', 'node 2 here', 'and im node 3'],\n                         x=[21.4, 54.2, 11.2],\n                         y=[100.2, 23.54, 32.1],\n                         label=['NODE 1', 'NODE 2', 'NODE 3'],\n                         color=['#00ff1e', '#162347', '#dd4b39'])\ng.show('example2.html')\n\n\n\n        \n        \n\n\n\n\nCode\nnx_graph = nx.cycle_graph(10)\nnx_graph.nodes[1]['title'] = 'Number 1'\nnx_graph.nodes[1]['group'] = 1\nnx_graph.nodes[3]['title'] = 'I belong to a different group!'\nnx_graph.nodes[3]['group'] = 10\nnx_graph.add_node(20, size=20, title='couple', group=2)\nnx_graph.add_node(21, size=15, title='couple', group=2)\nnx_graph.add_edge(20, 21, weight=5)\nnx_graph.add_node(25, size=25, label='lonely', title='lonely node', group=3)\nnt = Network('500px', '500px', notebook=True, cdn_resources=\"remote\")\n# populates the nodes and edges data structures\nnt.from_nx(nx_graph)\nnt.show('nx.html')\n\n\n\n        \n        \n\n\n\nGame of Thrones Example\n\n\nCode\nimport pandas as pd\n\ngot_net = Network(\n    height=\"750px\",\n    width=\"100%\",\n    bgcolor=\"#222222\",\n    font_color=\"white\",\n    notebook=True,\n    cdn_resources=\"remote\")\n\n# set the physics layout of the network\ngot_net.barnes_hut()\ngot_data = pd.read_csv(\"stormofswords.csv\")\n\nsources = got_data['Source']\ntargets = got_data['Target']\nweights = got_data['Weight']\n\nedge_data = zip(sources, targets, weights)\n\nfor e in edge_data:\n    src = e[0]\n    dst = e[1]\n    w = e[2]\n\n    got_net.add_node(src, src, title=src)\n    got_net.add_node(dst, dst, title=dst)\n    got_net.add_edge(src, dst, value=w)\n\nneighbor_map = got_net.get_adj_list()\n\n# add neighbor data to node hover data\nfor node in got_net.nodes:\n    node[\"title\"] += \" Neighbors:&lt;br&gt;\" + \"&lt;br&gt;\".join(neighbor_map[node[\"id\"]])\n    node[\"value\"] = len(neighbor_map[node[\"id\"]])\n\ngot_net.show(\"gameofthrones.html\")"
  }
]